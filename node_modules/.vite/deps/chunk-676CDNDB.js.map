{
  "version": 3,
  "sources": ["../../src/scrollpanel/style/ScrollPanelStyle.js", "../../src/scrollpanel/BaseScrollPanel.vue", "../../src/scrollpanel/ScrollPanel.vue", "../../src/scrollpanel/ScrollPanel.vue?vue&type=template&id=917733de&lang.js"],
  "sourcesContent": ["import BaseStyle from '@primevue/core/base/style';\n\nconst theme = ({ dt }) => `\n.p-scrollpanel-content-container {\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n    float: left;\n}\n\n.p-scrollpanel-content {\n    height: calc(100% + calc(2 * ${dt('scrollpanel.bar.size')}));\n    width: calc(100% + calc(2 * ${dt('scrollpanel.bar.size')}));\n    padding-inline: 0 calc(2 * ${dt('scrollpanel.bar.size')});\n    padding-block: 0 calc(2 * ${dt('scrollpanel.bar.size')});\n    position: relative;\n    overflow: auto;\n    box-sizing: border-box;\n    scrollbar-width: none;\n}\n\n.p-scrollpanel-content::-webkit-scrollbar {\n    display: none;\n}\n\n.p-scrollpanel-bar {\n    position: relative;\n    border-radius: ${dt('scrollpanel.bar.border.radius')};\n    z-index: 2;\n    cursor: pointer;\n    opacity: 0;\n    outline-color: transparent;\n    background: ${dt('scrollpanel.bar.background')};\n    border: 0 none;\n    transition: outline-color ${dt('scrollpanel.transition.duration')}, opacity ${dt('scrollpanel.transition.duration')};\n}\n\n.p-scrollpanel-bar:focus-visible {\n    box-shadow: ${dt('scrollpanel.bar.focus.ring.shadow')};\n    outline: ${dt('scrollpanel.barfocus.ring.width')} ${dt('scrollpanel.bar.focus.ring.style')} ${dt('scrollpanel.bar.focus.ring.color')};\n    outline-offset: ${dt('scrollpanel.barfocus.ring.offset')};\n}\n\n.p-scrollpanel-bar-y {\n    width: ${dt('scrollpanel.bar.size')};\n    inset-block-start: 0;\n}\n\n.p-scrollpanel-bar-x {\n    height: ${dt('scrollpanel.bar.size')};\n    inset-block-end: 0;\n}\n\n.p-scrollpanel-hidden {\n    visibility: hidden;\n}\n\n.p-scrollpanel:hover .p-scrollpanel-bar,\n.p-scrollpanel:active .p-scrollpanel-bar {\n    opacity: 1;\n}\n\n.p-scrollpanel-grabbed {\n    user-select: none;\n}\n`;\n\nconst classes = {\n    root: 'p-scrollpanel p-component',\n    contentContainer: 'p-scrollpanel-content-container',\n    content: 'p-scrollpanel-content',\n    barX: 'p-scrollpanel-bar p-scrollpanel-bar-x',\n    barY: 'p-scrollpanel-bar p-scrollpanel-bar-y'\n};\n\nexport default BaseStyle.extend({\n    name: 'scrollpanel',\n    theme,\n    classes\n});\n", "<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ScrollPanelStyle from 'primevue/scrollpanel/style';\n\nexport default {\n    name: 'BaseScrollPanel',\n    extends: BaseComponent,\n    props: {\n        step: {\n            type: Number,\n            default: 5\n        }\n    },\n    style: ScrollPanelStyle,\n    provide() {\n        return {\n            $pcScrollPanel: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div :class=\"cx('contentContainer')\" v-bind=\"ptm('contentContainer')\">\n            <div ref=\"content\" :id=\"contentId\" :class=\"cx('content')\" @scroll=\"onScroll\" @mouseenter=\"moveBar\" v-bind=\"ptm('content')\">\n                <slot></slot>\n            </div>\n        </div>\n        <div\n            ref=\"xBar\"\n            :class=\"cx('barx')\"\n            tabindex=\"0\"\n            role=\"scrollbar\"\n            aria-orientation=\"horizontal\"\n            :aria-controls=\"contentId\"\n            :aria-valuenow=\"lastScrollLeft\"\n            @mousedown=\"onXBarMouseDown\"\n            @keydown=\"onKeyDown($event)\"\n            @keyup=\"onKeyUp\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            v-bind=\"ptm('barx')\"\n            data-pc-group-section=\"bar\"\n        ></div>\n        <div\n            ref=\"yBar\"\n            :class=\"cx('bary')\"\n            tabindex=\"0\"\n            role=\"scrollbar\"\n            aria-orientation=\"vertical\"\n            :aria-controls=\"contentId\"\n            :aria-valuenow=\"lastScrollTop\"\n            @mousedown=\"onYBarMouseDown\"\n            @keydown=\"onKeyDown($event)\"\n            @keyup=\"onKeyUp\"\n            @focus=\"onFocus\"\n            v-bind=\"ptm('bary')\"\n            data-pc-group-section=\"bar\"\n        ></div>\n    </div>\n</template>\n\n<script>\nimport { addClass, getHeight, removeClass } from '@primeuix/utils/dom';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport BaseScrollPanel from './BaseScrollPanel.vue';\n\nexport default {\n    name: 'ScrollPanel',\n    extends: BaseScrollPanel,\n    inheritAttrs: false,\n    initialized: false,\n    documentResizeListener: null,\n    documentMouseMoveListener: null,\n    documentMouseUpListener: null,\n    frame: null,\n    scrollXRatio: null,\n    scrollYRatio: null,\n    isXBarClicked: false,\n    isYBarClicked: false,\n    lastPageX: null,\n    lastPageY: null,\n    timer: null,\n    outsideClickListener: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            orientation: 'vertical',\n            lastScrollTop: 0,\n            lastScrollLeft: 0\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n\n        if (this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    updated() {\n        if (!this.initialized && this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    beforeUnmount() {\n        this.unbindDocumentResizeListener();\n\n        if (this.frame) {\n            window.cancelAnimationFrame(this.frame);\n        }\n    },\n    methods: {\n        initialize() {\n            this.moveBar();\n            this.bindDocumentResizeListener();\n            this.calculateContainerHeight();\n        },\n        calculateContainerHeight() {\n            let containerStyles = getComputedStyle(this.$el),\n                xBarStyles = getComputedStyle(this.$refs.xBar),\n                pureContainerHeight = getHeight(this.$el) - parseInt(xBarStyles['height'], 10);\n\n            if (containerStyles['max-height'] !== 'none' && pureContainerHeight === 0) {\n                if (this.$refs.content.offsetHeight + parseInt(xBarStyles['height'], 10) > parseInt(containerStyles['max-height'], 10)) {\n                    this.$el.style.height = containerStyles['max-height'];\n                } else {\n                    this.$el.style.height =\n                        this.$refs.content.offsetHeight + parseFloat(containerStyles.paddingTop) + parseFloat(containerStyles.paddingBottom) + parseFloat(containerStyles.borderTopWidth) + parseFloat(containerStyles.borderBottomWidth) + 'px';\n                }\n            }\n        },\n        moveBar() {\n            if (this.$refs.content) {\n                /* horizontal scroll */\n                let totalWidth = this.$refs.content.scrollWidth;\n                let ownWidth = this.$refs.content.clientWidth;\n                let bottom = (this.$el.clientHeight - this.$refs.xBar.clientHeight) * -1;\n\n                this.scrollXRatio = ownWidth / totalWidth;\n\n                /* vertical scroll */\n                let totalHeight = this.$refs.content.scrollHeight;\n                let ownHeight = this.$refs.content.clientHeight;\n                let right = (this.$el.clientWidth - this.$refs.yBar.clientWidth) * -1;\n\n                this.scrollYRatio = ownHeight / totalHeight;\n\n                this.frame = this.requestAnimationFrame(() => {\n                    if (this.$refs.xBar) {\n                        if (this.scrollXRatio >= 1) {\n                            this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n                            !this.isUnstyled && addClass(this.$refs.xBar, 'p-scrollpanel-hidden');\n                        } else {\n                            this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n                            !this.isUnstyled && removeClass(this.$refs.xBar, 'p-scrollpanel-hidden');\n\n                            this.$refs.xBar.style.cssText = 'width:' + Math.max(this.scrollXRatio * 100, 10) + '%; inset-inline-start:' + (Math.abs(this.$refs.content.scrollLeft) / totalWidth) * 100 + '%;bottom:' + bottom + 'px;';\n                        }\n                    }\n\n                    if (this.$refs.yBar) {\n                        if (this.scrollYRatio >= 1) {\n                            this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n                            !this.isUnstyled && addClass(this.$refs.yBar, 'p-scrollpanel-hidden');\n                        } else {\n                            this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n                            !this.isUnstyled && removeClass(this.$refs.yBar, 'p-scrollpanel-hidden');\n\n                            this.$refs.yBar.style.cssText =\n                                'height:' + Math.max(this.scrollYRatio * 100, 10) + '%; top: calc(' + (this.$refs.content.scrollTop / totalHeight) * 100 + '% - ' + this.$refs.xBar.clientHeight + 'px); inset-inline-end:' + right + 'px;';\n                        }\n                    }\n                });\n            }\n        },\n        onYBarMouseDown(e) {\n            this.isYBarClicked = true;\n            this.$refs.yBar.focus();\n            this.lastPageY = e.pageY;\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'true');\n            !this.isUnstyled && addClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'true');\n            !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.bindDocumentMouseListeners();\n            e.preventDefault();\n        },\n        onXBarMouseDown(e) {\n            this.isXBarClicked = true;\n            this.$refs.xBar.focus();\n            this.lastPageX = e.pageX;\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && addClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.bindDocumentMouseListeners();\n            e.preventDefault();\n        },\n        onScroll(event) {\n            if (this.lastScrollLeft !== event.target.scrollLeft) {\n                this.lastScrollLeft = event.target.scrollLeft;\n                this.orientation = 'horizontal';\n            } else if (this.lastScrollTop !== event.target.scrollTop) {\n                this.lastScrollTop = event.target.scrollTop;\n                this.orientation = 'vertical';\n            }\n\n            this.moveBar();\n        },\n        onKeyDown(event) {\n            if (this.orientation === 'vertical') {\n                switch (event.code) {\n                    case 'ArrowDown': {\n                        this.setTimer('scrollTop', this.step);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowUp': {\n                        this.setTimer('scrollTop', this.step * -1);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowLeft':\n\n                    case 'ArrowRight': {\n                        event.preventDefault();\n                        break;\n                    }\n\n                    default:\n                        //no op\n                        break;\n                }\n            } else if (this.orientation === 'horizontal') {\n                switch (event.code) {\n                    case 'ArrowRight': {\n                        this.setTimer('scrollLeft', this.step);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowLeft': {\n                        this.setTimer('scrollLeft', this.step * -1);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowDown':\n\n                    case 'ArrowUp': {\n                        event.preventDefault();\n                        break;\n                    }\n\n                    default:\n                        //no op\n                        break;\n                }\n            }\n        },\n        onKeyUp() {\n            this.clearTimer();\n        },\n        repeat(bar, step) {\n            this.$refs.content[bar] += step;\n            this.moveBar();\n        },\n        setTimer(bar, step) {\n            this.clearTimer();\n            this.timer = setTimeout(() => {\n                this.repeat(bar, step);\n            }, 40);\n        },\n        clearTimer() {\n            if (this.timer) {\n                clearTimeout(this.timer);\n            }\n        },\n        onDocumentMouseMove(e) {\n            if (this.isXBarClicked) {\n                this.onMouseMoveForXBar(e);\n            } else if (this.isYBarClicked) {\n                this.onMouseMoveForYBar(e);\n            } else {\n                this.onMouseMoveForXBar(e);\n                this.onMouseMoveForYBar(e);\n            }\n        },\n        onMouseMoveForXBar(e) {\n            let deltaX = e.pageX - this.lastPageX;\n\n            this.lastPageX = e.pageX;\n\n            this.frame = this.requestAnimationFrame(() => {\n                this.$refs.content.scrollLeft += deltaX / this.scrollXRatio;\n            });\n        },\n        onMouseMoveForYBar(e) {\n            let deltaY = e.pageY - this.lastPageY;\n\n            this.lastPageY = e.pageY;\n\n            this.frame = this.requestAnimationFrame(() => {\n                this.$refs.content.scrollTop += deltaY / this.scrollYRatio;\n            });\n        },\n        onFocus(event) {\n            if (this.$refs.xBar.isSameNode(event.target)) {\n                this.orientation = 'horizontal';\n            } else if (this.$refs.yBar.isSameNode(event.target)) {\n                this.orientation = 'vertical';\n            }\n        },\n        onBlur() {\n            if (this.orientation === 'horizontal') {\n                this.orientation = 'vertical';\n            }\n        },\n        onDocumentMouseUp() {\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n            this.$refs.xBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.unbindDocumentMouseListeners();\n            this.isXBarClicked = false;\n            this.isYBarClicked = false;\n        },\n        requestAnimationFrame(f) {\n            let frame = window.requestAnimationFrame || this.timeoutFrame;\n\n            return frame(f);\n        },\n        refresh() {\n            this.moveBar();\n        },\n        scrollTop(scrollTop) {\n            let scrollableHeight = this.$refs.content.scrollHeight - this.$refs.content.clientHeight;\n\n            scrollTop = scrollTop > scrollableHeight ? scrollableHeight : scrollTop > 0 ? scrollTop : 0;\n            this.$refs.content.scrollTop = scrollTop;\n        },\n        timeoutFrame(fn) {\n            setTimeout(fn, 0);\n        },\n        bindDocumentMouseListeners() {\n            if (!this.documentMouseMoveListener) {\n                this.documentMouseMoveListener = (e) => {\n                    this.onDocumentMouseMove(e);\n                };\n\n                document.addEventListener('mousemove', this.documentMouseMoveListener);\n            }\n\n            if (!this.documentMouseUpListener) {\n                this.documentMouseUpListener = (e) => {\n                    this.onDocumentMouseUp(e);\n                };\n\n                document.addEventListener('mouseup', this.documentMouseUpListener);\n            }\n        },\n        unbindDocumentMouseListeners() {\n            if (this.documentMouseMoveListener) {\n                document.removeEventListener('mousemove', this.documentMouseMoveListener);\n                this.documentMouseMoveListener = null;\n            }\n\n            if (this.documentMouseUpListener) {\n                document.removeEventListener('mouseup', this.documentMouseUpListener);\n                this.documentMouseUpListener = null;\n            }\n        },\n        bindDocumentResizeListener() {\n            if (!this.documentResizeListener) {\n                this.documentResizeListener = () => {\n                    this.moveBar();\n                };\n\n                window.addEventListener('resize', this.documentResizeListener);\n            }\n        },\n        unbindDocumentResizeListener() {\n            if (this.documentResizeListener) {\n                window.removeEventListener('resize', this.documentResizeListener);\n                this.documentResizeListener = null;\n            }\n        }\n    },\n    computed: {\n        contentId() {\n            return this.id + '_content';\n        }\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div :class=\"cx('contentContainer')\" v-bind=\"ptm('contentContainer')\">\n            <div ref=\"content\" :id=\"contentId\" :class=\"cx('content')\" @scroll=\"onScroll\" @mouseenter=\"moveBar\" v-bind=\"ptm('content')\">\n                <slot></slot>\n            </div>\n        </div>\n        <div\n            ref=\"xBar\"\n            :class=\"cx('barx')\"\n            tabindex=\"0\"\n            role=\"scrollbar\"\n            aria-orientation=\"horizontal\"\n            :aria-controls=\"contentId\"\n            :aria-valuenow=\"lastScrollLeft\"\n            @mousedown=\"onXBarMouseDown\"\n            @keydown=\"onKeyDown($event)\"\n            @keyup=\"onKeyUp\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            v-bind=\"ptm('barx')\"\n            data-pc-group-section=\"bar\"\n        ></div>\n        <div\n            ref=\"yBar\"\n            :class=\"cx('bary')\"\n            tabindex=\"0\"\n            role=\"scrollbar\"\n            aria-orientation=\"vertical\"\n            :aria-controls=\"contentId\"\n            :aria-valuenow=\"lastScrollTop\"\n            @mousedown=\"onYBarMouseDown\"\n            @keydown=\"onKeyDown($event)\"\n            @keyup=\"onKeyUp\"\n            @focus=\"onFocus\"\n            v-bind=\"ptm('bary')\"\n            data-pc-group-section=\"bar\"\n        ></div>\n    </div>\n</template>\n\n<script>\nimport { addClass, getHeight, removeClass } from '@primeuix/utils/dom';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport BaseScrollPanel from './BaseScrollPanel.vue';\n\nexport default {\n    name: 'ScrollPanel',\n    extends: BaseScrollPanel,\n    inheritAttrs: false,\n    initialized: false,\n    documentResizeListener: null,\n    documentMouseMoveListener: null,\n    documentMouseUpListener: null,\n    frame: null,\n    scrollXRatio: null,\n    scrollYRatio: null,\n    isXBarClicked: false,\n    isYBarClicked: false,\n    lastPageX: null,\n    lastPageY: null,\n    timer: null,\n    outsideClickListener: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            orientation: 'vertical',\n            lastScrollTop: 0,\n            lastScrollLeft: 0\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n\n        if (this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    updated() {\n        if (!this.initialized && this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    beforeUnmount() {\n        this.unbindDocumentResizeListener();\n\n        if (this.frame) {\n            window.cancelAnimationFrame(this.frame);\n        }\n    },\n    methods: {\n        initialize() {\n            this.moveBar();\n            this.bindDocumentResizeListener();\n            this.calculateContainerHeight();\n        },\n        calculateContainerHeight() {\n            let containerStyles = getComputedStyle(this.$el),\n                xBarStyles = getComputedStyle(this.$refs.xBar),\n                pureContainerHeight = getHeight(this.$el) - parseInt(xBarStyles['height'], 10);\n\n            if (containerStyles['max-height'] !== 'none' && pureContainerHeight === 0) {\n                if (this.$refs.content.offsetHeight + parseInt(xBarStyles['height'], 10) > parseInt(containerStyles['max-height'], 10)) {\n                    this.$el.style.height = containerStyles['max-height'];\n                } else {\n                    this.$el.style.height =\n                        this.$refs.content.offsetHeight + parseFloat(containerStyles.paddingTop) + parseFloat(containerStyles.paddingBottom) + parseFloat(containerStyles.borderTopWidth) + parseFloat(containerStyles.borderBottomWidth) + 'px';\n                }\n            }\n        },\n        moveBar() {\n            if (this.$refs.content) {\n                /* horizontal scroll */\n                let totalWidth = this.$refs.content.scrollWidth;\n                let ownWidth = this.$refs.content.clientWidth;\n                let bottom = (this.$el.clientHeight - this.$refs.xBar.clientHeight) * -1;\n\n                this.scrollXRatio = ownWidth / totalWidth;\n\n                /* vertical scroll */\n                let totalHeight = this.$refs.content.scrollHeight;\n                let ownHeight = this.$refs.content.clientHeight;\n                let right = (this.$el.clientWidth - this.$refs.yBar.clientWidth) * -1;\n\n                this.scrollYRatio = ownHeight / totalHeight;\n\n                this.frame = this.requestAnimationFrame(() => {\n                    if (this.$refs.xBar) {\n                        if (this.scrollXRatio >= 1) {\n                            this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n                            !this.isUnstyled && addClass(this.$refs.xBar, 'p-scrollpanel-hidden');\n                        } else {\n                            this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n                            !this.isUnstyled && removeClass(this.$refs.xBar, 'p-scrollpanel-hidden');\n\n                            this.$refs.xBar.style.cssText = 'width:' + Math.max(this.scrollXRatio * 100, 10) + '%; inset-inline-start:' + (Math.abs(this.$refs.content.scrollLeft) / totalWidth) * 100 + '%;bottom:' + bottom + 'px;';\n                        }\n                    }\n\n                    if (this.$refs.yBar) {\n                        if (this.scrollYRatio >= 1) {\n                            this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n                            !this.isUnstyled && addClass(this.$refs.yBar, 'p-scrollpanel-hidden');\n                        } else {\n                            this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n                            !this.isUnstyled && removeClass(this.$refs.yBar, 'p-scrollpanel-hidden');\n\n                            this.$refs.yBar.style.cssText =\n                                'height:' + Math.max(this.scrollYRatio * 100, 10) + '%; top: calc(' + (this.$refs.content.scrollTop / totalHeight) * 100 + '% - ' + this.$refs.xBar.clientHeight + 'px); inset-inline-end:' + right + 'px;';\n                        }\n                    }\n                });\n            }\n        },\n        onYBarMouseDown(e) {\n            this.isYBarClicked = true;\n            this.$refs.yBar.focus();\n            this.lastPageY = e.pageY;\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'true');\n            !this.isUnstyled && addClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'true');\n            !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.bindDocumentMouseListeners();\n            e.preventDefault();\n        },\n        onXBarMouseDown(e) {\n            this.isXBarClicked = true;\n            this.$refs.xBar.focus();\n            this.lastPageX = e.pageX;\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && addClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.bindDocumentMouseListeners();\n            e.preventDefault();\n        },\n        onScroll(event) {\n            if (this.lastScrollLeft !== event.target.scrollLeft) {\n                this.lastScrollLeft = event.target.scrollLeft;\n                this.orientation = 'horizontal';\n            } else if (this.lastScrollTop !== event.target.scrollTop) {\n                this.lastScrollTop = event.target.scrollTop;\n                this.orientation = 'vertical';\n            }\n\n            this.moveBar();\n        },\n        onKeyDown(event) {\n            if (this.orientation === 'vertical') {\n                switch (event.code) {\n                    case 'ArrowDown': {\n                        this.setTimer('scrollTop', this.step);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowUp': {\n                        this.setTimer('scrollTop', this.step * -1);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowLeft':\n\n                    case 'ArrowRight': {\n                        event.preventDefault();\n                        break;\n                    }\n\n                    default:\n                        //no op\n                        break;\n                }\n            } else if (this.orientation === 'horizontal') {\n                switch (event.code) {\n                    case 'ArrowRight': {\n                        this.setTimer('scrollLeft', this.step);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowLeft': {\n                        this.setTimer('scrollLeft', this.step * -1);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowDown':\n\n                    case 'ArrowUp': {\n                        event.preventDefault();\n                        break;\n                    }\n\n                    default:\n                        //no op\n                        break;\n                }\n            }\n        },\n        onKeyUp() {\n            this.clearTimer();\n        },\n        repeat(bar, step) {\n            this.$refs.content[bar] += step;\n            this.moveBar();\n        },\n        setTimer(bar, step) {\n            this.clearTimer();\n            this.timer = setTimeout(() => {\n                this.repeat(bar, step);\n            }, 40);\n        },\n        clearTimer() {\n            if (this.timer) {\n                clearTimeout(this.timer);\n            }\n        },\n        onDocumentMouseMove(e) {\n            if (this.isXBarClicked) {\n                this.onMouseMoveForXBar(e);\n            } else if (this.isYBarClicked) {\n                this.onMouseMoveForYBar(e);\n            } else {\n                this.onMouseMoveForXBar(e);\n                this.onMouseMoveForYBar(e);\n            }\n        },\n        onMouseMoveForXBar(e) {\n            let deltaX = e.pageX - this.lastPageX;\n\n            this.lastPageX = e.pageX;\n\n            this.frame = this.requestAnimationFrame(() => {\n                this.$refs.content.scrollLeft += deltaX / this.scrollXRatio;\n            });\n        },\n        onMouseMoveForYBar(e) {\n            let deltaY = e.pageY - this.lastPageY;\n\n            this.lastPageY = e.pageY;\n\n            this.frame = this.requestAnimationFrame(() => {\n                this.$refs.content.scrollTop += deltaY / this.scrollYRatio;\n            });\n        },\n        onFocus(event) {\n            if (this.$refs.xBar.isSameNode(event.target)) {\n                this.orientation = 'horizontal';\n            } else if (this.$refs.yBar.isSameNode(event.target)) {\n                this.orientation = 'vertical';\n            }\n        },\n        onBlur() {\n            if (this.orientation === 'horizontal') {\n                this.orientation = 'vertical';\n            }\n        },\n        onDocumentMouseUp() {\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n            this.$refs.xBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.unbindDocumentMouseListeners();\n            this.isXBarClicked = false;\n            this.isYBarClicked = false;\n        },\n        requestAnimationFrame(f) {\n            let frame = window.requestAnimationFrame || this.timeoutFrame;\n\n            return frame(f);\n        },\n        refresh() {\n            this.moveBar();\n        },\n        scrollTop(scrollTop) {\n            let scrollableHeight = this.$refs.content.scrollHeight - this.$refs.content.clientHeight;\n\n            scrollTop = scrollTop > scrollableHeight ? scrollableHeight : scrollTop > 0 ? scrollTop : 0;\n            this.$refs.content.scrollTop = scrollTop;\n        },\n        timeoutFrame(fn) {\n            setTimeout(fn, 0);\n        },\n        bindDocumentMouseListeners() {\n            if (!this.documentMouseMoveListener) {\n                this.documentMouseMoveListener = (e) => {\n                    this.onDocumentMouseMove(e);\n                };\n\n                document.addEventListener('mousemove', this.documentMouseMoveListener);\n            }\n\n            if (!this.documentMouseUpListener) {\n                this.documentMouseUpListener = (e) => {\n                    this.onDocumentMouseUp(e);\n                };\n\n                document.addEventListener('mouseup', this.documentMouseUpListener);\n            }\n        },\n        unbindDocumentMouseListeners() {\n            if (this.documentMouseMoveListener) {\n                document.removeEventListener('mousemove', this.documentMouseMoveListener);\n                this.documentMouseMoveListener = null;\n            }\n\n            if (this.documentMouseUpListener) {\n                document.removeEventListener('mouseup', this.documentMouseUpListener);\n                this.documentMouseUpListener = null;\n            }\n        },\n        bindDocumentResizeListener() {\n            if (!this.documentResizeListener) {\n                this.documentResizeListener = () => {\n                    this.moveBar();\n                };\n\n                window.addEventListener('resize', this.documentResizeListener);\n            }\n        },\n        unbindDocumentResizeListener() {\n            if (this.documentResizeListener) {\n                window.removeEventListener('resize', this.documentResizeListener);\n                this.documentResizeListener = null;\n            }\n        }\n    },\n    computed: {\n        contentId() {\n            return this.id + '_content';\n        }\n    }\n};\n</script>\n"],
  "mappings": "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",
  "names": ["theme", "_ref", "dt", "concat", "classes", "root", "contentContainer", "content", "barX", "barY", "BaseStyle", "extend", "name", "name", "BaseComponent", "props", "step", "type", "Number", "style", "ScrollPanelStyle", "provide", "$pcScrollPanel", "$parentInstance", "script", "BaseScrollPanel", "inheritAttrs", "initialized", "documentResizeListener", "documentMouseMoveListener", "documentMouseUpListener", "frame", "scrollXRatio", "scrollYRatio", "isXBarClicked", "isYBarClicked", "lastPageX", "lastPageY", "timer", "outsideClickListener", "data", "id", "$attrs", "orientation", "lastScrollTop", "lastScrollLeft", "watch", "$attrsId", "newValue", "UniqueComponentId", "mounted", "$el", "offsetParent", "initialize", "updated", "beforeUnmount", "unbindDocumentResizeListener", "window", "cancelAnimationFrame", "methods", "moveBar", "bindDocumentResizeListener", "calculateContainerHeight", "containerStyles", "getComputedStyle", "xBarStyles", "$refs", "xBar", "pureContainerHeight", "getHeight", "parseInt", "content", "offsetHeight", "height", "parseFloat", "paddingTop", "paddingBottom", "borderTopWidth", "borderBottomWidth", "_this", "totalWidth", "scrollWidth", "ownWidth", "clientWidth", "bottom", "clientHeight", "totalHeight", "scrollHeight", "ownHeight", "right", "yBar", "requestAnimationFrame", "setAttribute", "isUnstyled", "addClass", "removeClass", "cssText", "Math", "max", "abs", "scrollLeft", "scrollTop", "onYBarMouseDown", "e", "focus", "pageY", "document", "body", "bindDocumentMouseListeners", "preventDefault", "onXBarMouseDown", "pageX", "onScroll", "event", "target", "onKeyDown", "code", "setTimer", "onKeyUp", "clearTimer", "repeat", "bar", "_this2", "setTimeout", "clearTimeout", "onDocumentMouseMove", "onMouseMoveForXBar", "onMouseMoveForYBar", "_this3", "deltaX", "_this4", "deltaY", "onFocus", "isSameNode", "onBlur", "onDocumentMouseUp", "unbindDocumentMouseListeners", "f", "timeoutFrame", "refresh", "scrollableHeight", "fn", "_this5", "addEventListener", "removeEventListener", "_this6", "computed", "contentId", "_openBlock", "_createElementBlock", "_mergeProps", "_ctx", "cx", "ptmi", "_createElementVNode", "ptm", "ref", "$options", "apply", "arguments", "onMouseenter", "_renderSlot", "$slots", "tabindex", "role", "$data", "onMousedown", "onKeydown", "_cache", "$event", "onKeyup", "_hoisted_2", "_hoisted_3"]
}
